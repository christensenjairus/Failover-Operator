apiVersion: crd.hahomelabs.com/v1alpha1
kind: FailoverGroup
metadata:
  labels:
    app.kubernetes.io/part-of: failover-operator
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/created-by: failover-operator
  name: wordpress
  namespace: wordpress
spec:
  # DefaultFailoverMode determines the default failover approach for all components
  # 'safe' - ensures data is fully synced before failover
  # 'fast' - allows immediate transition without waiting
  defaultFailoverMode: safe
  
  # Define Flux resources that should be suspended during failover
  parentFluxResources:
    - kind: HelmRelease
      name: wordpress
  
  # Define your application components
  components:
    # Database component
    - name: database
      # Override the default failover mode for this specific component
      failoverMode: safe
      workloads:
        - kind: StatefulSet
          name: wordpress-mariadb-primary
        - kind: StatefulSet
          name: wordpress-mariadb-secondary
      # Specify VolumeReplications to manage
      volumeReplications:
        - "data-wordpress-mariadb-primary-0"
        - "data-wordpress-mariadb-secondary-0"
        - "data-wordpress-mariadb-secondary-1"
    
    # Cache component
    - name: cache
      workloads:
        - kind: StatefulSet
          name: wordpress-memcached
    
    # Web component
    - name: web
      # Faster failover for web tier (stateless)
      failoverMode: fast
      workloads:
        - kind: Deployment
          name: wordpress
      # Specify VirtualServices for DNS switching
      virtualServices:
        - "wordpress"

# Status section is included as an example of what will be populated by the controller
# The controller will automatically initialize new FailoverGroups with PRIMARY state
# status:
#   state: "PRIMARY"
#   health: "OK"
#   
#   # Component health status
#   components:
#     - name: database
#       health: "OK"
#     - name: cache
#       health: "OK"
#     - name: web
#       health: "OK" 